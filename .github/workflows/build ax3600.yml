#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build Ax3600 Images

env:
  PREFIX_URL: https://downloads.immortalwrt.org/releases/23.05-SNAPSHOT/targets
  DEVICE_VERSION: 23.05-SNAPSHOT
  DEVICE_PLATFORM: xiaomi_ax3600-stock
  DEVICE_TARGET: ipq807x
  DEVICE_SUBTARGET: generic
 
on:
  workflow_dispatch:
    # inputs:
    #   INPUT_TARGET:
    #     description: "Target to build (platform/target/subtarget)"
    #     required: false
    #     default: "all"
  #schedule:
  #  - cron: 0 0 * * *

jobs:
  
  Docker-Images:
    name: Build Image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential libncurses5-dev libncursesw5-dev \
            zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip python3 qemu-utils genisoimage

      - name: Download Image Builder
        run: |
          echo url:$PREFIX_URL/$DEVICE_TARGET/$DEVICE_SUBTARGET/immortalwrt-imagebuilder-$DEVICE_VERSION-$DEVICE_TARGET-$DEVICE_SUBTARGET.Linux-x86_64.tar.xz
          wget -q $PREFIX_URL/$DEVICE_TARGET/$DEVICE_SUBTARGET/immortalwrt-imagebuilder-$DEVICE_VERSION-$DEVICE_TARGET-$DEVICE_SUBTARGET.Linux-x86_64.tar.xz

      - name: Set Image Builder
        run: |
          tar -xJf *.tar.xz
          rm -rf *.xz
          cd immortalwrt-imagebuilder-$DEVICE_VERSION-$DEVICE_TARGET-$DEVICE_SUBTARGET.Linux-x86_64
          cp -rf $GITHUB_WORKSPACE/files .
          chmod +x files/etc/rc.local

      - name: Make Info
        run: |
          cd immortalwrt-imagebuilder-$DEVICE_VERSION-$DEVICE_TARGET-$DEVICE_SUBTARGET.Linux-x86_64
          chmod +x $GITHUB_WORKSPACE/scripts/*
          #$GITHUB_WORKSPACE/scripts/preset-terminal-tools.sh
          make info
      
      - name: Build RootFS
        run: |
          cd immortalwrt-imagebuilder-$DEVICE_VERSION-$DEVICE_TARGET-$DEVICE_SUBTARGET.Linux-x86_64
          chmod +x $GITHUB_WORKSPACE/scripts/*
          #$GITHUB_WORKSPACE/scripts/preset-terminal-tools.sh
          export CONFIG_PACKAGES=$(cat $GITHUB_WORKSPACE/config/packages_ax3600.config | tr -s "\n" " ")
          #make image PACKAGES="$CONFIG_PACKAGES" FILES="files" 只编译不生成docker
          make image PROFILE="$DEVICE_PLATFORM" PACKAGES="$CONFIG_PACKAGES"
       
      - name: Copy target
        run: |  
          cd immortalwrt-imagebuilder-$DEVICE_VERSION-$DEVICE_TARGET-$DEVICE_SUBTARGET.Linux-x86_64
          ls -llah bin/targets/$DEVICE_TARGET/$DEVICE_SUBTARGET
          echo "---------"
          #cp bin/targets/$DEVICE_TARGET/$DEVICE_SUBTARGET/*rootfs.tar.gz $GITHUB_WORKSPACE
          cp bin/targets/$DEVICE_TARGET/$DEVICE_SUBTARGET/*.bin $GITHUB_WORKSPACE/immortalwrt_23.05-SNAPSHOT_ax3600.bin
          cp bin/targets/$DEVICE_TARGET/$DEVICE_SUBTARGET/*.ubi $GITHUB_WORKSPACE/immortalwrt_23.05-SNAPSHOT_ax3600.ubi
                  
      - name: Delete Image Builder
        run: |
          ls -llah bin/targets/$DEVICE_TARGET/$DEVICE_SUBTARGET
          cd $GITHUB_WORKSPACE
          rm -rf immortalwrt-imagebuilder*
          ls -llah


      
      - name: Upload Image ubi
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt_23.05-SNAPSHOT_ax3600.ubi
          path: immortalwrt_23.05-SNAPSHOT_ax3600.ubi
      
      - name: Upload Image bin
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt_23.05-SNAPSHOT_ax3600.bin
          path: immortalwrt_23.05-SNAPSHOT_ax3600.bin
